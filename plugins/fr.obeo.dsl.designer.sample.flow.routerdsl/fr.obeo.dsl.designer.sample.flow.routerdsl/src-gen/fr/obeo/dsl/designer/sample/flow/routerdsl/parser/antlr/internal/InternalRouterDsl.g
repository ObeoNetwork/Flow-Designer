/*
 * generated by Xtext 2.12.0
 */
grammar InternalRouterDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.obeo.dsl.designer.sample.flow.routerdsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.obeo.dsl.designer.sample.flow.routerdsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.obeo.dsl.designer.sample.flow.routerdsl.services.RouterDslGrammarAccess;

}

@parser::members {

 	private RouterDslGrammarAccess grammarAccess;

    public InternalRouterDslParser(TokenStream input, RouterDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "RoutingRules";
   	}

   	@Override
   	protected RouterDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRoutingRules
entryRuleRoutingRules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoutingRulesRule()); }
	iv_ruleRoutingRules=ruleRoutingRules
	{ $current=$iv_ruleRoutingRules.current; }
	EOF;

// Rule RoutingRules
ruleRoutingRules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRoutingRulesAccess().getRoutingRuleAction_0(),
					$current);
			}
		)
		otherlv_1='#'
		{
			newLeafNode(otherlv_1, grammarAccess.getRoutingRulesAccess().getNumberSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRoutingRulesAccess().getRulesCaseRuleParserRuleCall_2_0());
				}
				lv_rules_2_0=ruleCaseRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoutingRulesRule());
					}
					add(
						$current,
						"rules",
						lv_rules_2_0,
						"fr.obeo.dsl.designer.sample.flow.routerdsl.RouterDsl.CaseRule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleCaseRule
entryRuleCaseRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseRuleRule()); }
	iv_ruleCaseRule=ruleCaseRule
	{ $current=$iv_ruleCaseRule.current; }
	EOF;

// Rule CaseRule
ruleCaseRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Case'
		{
			newLeafNode(otherlv_0, grammarAccess.getCaseRuleAccess().getCaseKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseRuleAccess().getConditionConditionalParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleConditional
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseRuleRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"fr.obeo.dsl.designer.sample.flow.routerdsl.RouterDsl.Conditional");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getCaseRuleAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseRuleAccess().getDecisionsDecisionParserRuleCall_3_0());
				}
				lv_decisions_3_0=ruleDecision
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseRuleRule());
					}
					add(
						$current,
						"decisions",
						lv_decisions_3_0,
						"fr.obeo.dsl.designer.sample.flow.routerdsl.RouterDsl.Decision");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleDecision
entryRuleDecision returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDecisionRule()); }
	iv_ruleDecision=ruleDecision
	{ $current=$iv_ruleDecision.current; }
	EOF;

// Rule Decision
ruleDecision returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDecisionAccess().getRouteToParserRuleCall_0_0());
			}
			this_RouteTo_0=ruleRouteTo
			{
				$current = $this_RouteTo_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getDecisionAccess().getMessageDecisionParserRuleCall_0_1());
			}
			this_MessageDecision_1=ruleMessageDecision
			{
				$current = $this_MessageDecision_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getDecisionAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleMessageDecision
entryRuleMessageDecision returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMessageDecisionRule()); }
	iv_ruleMessageDecision=ruleMessageDecision
	{ $current=$iv_ruleMessageDecision.current; }
	EOF;

// Rule MessageDecision
ruleMessageDecision returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMessageDecisionAccess().getDropMessageParserRuleCall_0());
		}
		this_DropMessage_0=ruleDropMessage
		{
			$current = $this_DropMessage_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMessageDecisionAccess().getAlertParserRuleCall_1());
		}
		this_Alert_1=ruleAlert
		{
			$current = $this_Alert_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRouteTo
entryRuleRouteTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRouteToRule()); }
	iv_ruleRouteTo=ruleRouteTo
	{ $current=$iv_ruleRouteTo.current; }
	EOF;

// Rule RouteTo
ruleRouteTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='->'
		{
			newLeafNode(otherlv_0, grammarAccess.getRouteToAccess().getHyphenMinusGreaterThanSignKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRouteToRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getRouteToAccess().getDestinationProcessorCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDropMessage
entryRuleDropMessage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDropMessageRule()); }
	iv_ruleDropMessage=ruleDropMessage
	{ $current=$iv_ruleDropMessage.current; }
	EOF;

// Rule DropMessage
ruleDropMessage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDropMessageAccess().getDropMessageAction_0(),
					$current);
			}
		)
		otherlv_1='X'
		{
			newLeafNode(otherlv_1, grammarAccess.getDropMessageAccess().getXKeyword_1());
		}
	)
;

// Entry rule entryRuleAlert
entryRuleAlert returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlertRule()); }
	iv_ruleAlert=ruleAlert
	{ $current=$iv_ruleAlert.current; }
	EOF;

// Rule Alert
ruleAlert returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='/!\\'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlertAccess().getSolidusExclamationMarkReverseSolidusKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAlertAccess().getLevelAlertLevelEnumRuleCall_1_0());
				}
				lv_level_1_0=ruleAlertLevel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlertRule());
					}
					set(
						$current,
						"level",
						lv_level_1_0,
						"fr.obeo.dsl.designer.sample.flow.routerdsl.RouterDsl.AlertLevel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='/!\\'
		{
			newLeafNode(otherlv_2, grammarAccess.getAlertAccess().getSolidusExclamationMarkReverseSolidusKeyword_2());
		}
	)
;

// Entry rule entryRuleConditional
entryRuleConditional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalRule()); }
	iv_ruleConditional=ruleConditional
	{ $current=$iv_ruleConditional.current; }
	EOF;

// Rule Conditional
ruleConditional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalAccess().getLeftObjectAccessOrValueParserRuleCall_0_0());
				}
				lv_left_0_0=ruleObjectAccessOrValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalRule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"fr.obeo.dsl.designer.sample.flow.routerdsl.RouterDsl.ObjectAccessOrValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalAccess().getOpComparisonEnumRuleCall_1_0());
				}
				lv_op_1_0=ruleComparison
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalRule());
					}
					set(
						$current,
						"op",
						lv_op_1_0,
						"fr.obeo.dsl.designer.sample.flow.routerdsl.RouterDsl.Comparison");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalAccess().getRightObjectAccessOrValueParserRuleCall_2_0());
				}
				lv_right_2_0=ruleObjectAccessOrValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalRule());
					}
					set(
						$current,
						"right",
						lv_right_2_0,
						"fr.obeo.dsl.designer.sample.flow.routerdsl.RouterDsl.ObjectAccessOrValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleObjectAccessOrValue
entryRuleObjectAccessOrValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectAccessOrValueRule()); }
	iv_ruleObjectAccessOrValue=ruleObjectAccessOrValue
	{ $current=$iv_ruleObjectAccessOrValue.current; }
	EOF;

// Rule ObjectAccessOrValue
ruleObjectAccessOrValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getObjectAccessOrValueAccess().getObjectAccessParserRuleCall_0());
		}
		this_ObjectAccess_0=ruleObjectAccess
		{
			$current = $this_ObjectAccess_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getObjectAccessOrValueAccess().getLiteralValueParserRuleCall_1());
		}
		this_LiteralValue_1=ruleLiteralValue
		{
			$current = $this_LiteralValue_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getObjectAccessOrValueAccess().getThroughtputParserRuleCall_2());
		}
		this_Throughtput_2=ruleThroughtput
		{
			$current = $this_Throughtput_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getObjectAccessOrValueAccess().getTemperatureParserRuleCall_3());
		}
		this_Temperature_3=ruleTemperature
		{
			$current = $this_Temperature_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLiteralValue
entryRuleLiteralValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralValueRule()); }
	iv_ruleLiteralValue=ruleLiteralValue
	{ $current=$iv_ruleLiteralValue.current; }
	EOF;

// Rule LiteralValue
ruleLiteralValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getLiteralValueAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLiteralValueRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleThroughtput
entryRuleThroughtput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThroughtputRule()); }
	iv_ruleThroughtput=ruleThroughtput
	{ $current=$iv_ruleThroughtput.current; }
	EOF;

// Rule Throughtput
ruleThroughtput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_INT
				{
					newLeafNode(lv_value_0_0, grammarAccess.getThroughtputAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getThroughtputRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_1='/'
		{
			newLeafNode(otherlv_1, grammarAccess.getThroughtputAccess().getSolidusKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getThroughtputAccess().getUnitTimeUnitEnumRuleCall_2_0());
				}
				lv_unit_2_0=ruleTimeUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getThroughtputRule());
					}
					set(
						$current,
						"unit",
						lv_unit_2_0,
						"fr.obeo.dsl.designer.sample.flow.routerdsl.RouterDsl.TimeUnit");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTemperature
entryRuleTemperature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemperatureRule()); }
	iv_ruleTemperature=ruleTemperature
	{ $current=$iv_ruleTemperature.current; }
	EOF;

// Rule Temperature
ruleTemperature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_INT
				{
					newLeafNode(lv_value_0_0, grammarAccess.getTemperatureAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTemperatureRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTemperatureAccess().getUnitTemperatureUnitEnumRuleCall_1_0());
				}
				lv_unit_1_0=ruleTemperatureUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemperatureRule());
					}
					set(
						$current,
						"unit",
						lv_unit_1_0,
						"fr.obeo.dsl.designer.sample.flow.routerdsl.RouterDsl.TemperatureUnit");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleObjectAccess
entryRuleObjectAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectAccessRule()); }
	iv_ruleObjectAccess=ruleObjectAccess
	{ $current=$iv_ruleObjectAccess.current; }
	EOF;

// Rule ObjectAccess
ruleObjectAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getObjectAccessAccess().getProcessorAccessParserRuleCall_0());
		}
		this_ProcessorAccess_0=ruleProcessorAccess
		{
			$current = $this_ProcessorAccess_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getObjectAccessAccess().getSensorAccessParserRuleCall_1());
		}
		this_SensorAccess_1=ruleSensorAccess
		{
			$current = $this_SensorAccess_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getObjectAccessAccess().getSystemAccessParserRuleCall_2());
		}
		this_SystemAccess_2=ruleSystemAccess
		{
			$current = $this_SystemAccess_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleProcessorAccess
entryRuleProcessorAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessorAccessRule()); }
	iv_ruleProcessorAccess=ruleProcessorAccess
	{ $current=$iv_ruleProcessorAccess.current; }
	EOF;

// Rule ProcessorAccess
ruleProcessorAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcessorAccessRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getProcessorAccessAccess().getProcessorProcessorCrossReference_0_0());
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getProcessorAccessAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessorAccessAccess().getAttributeProcessorAttributeEnumRuleCall_2_0());
				}
				lv_attribute_2_0=ruleProcessorAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessorAccessRule());
					}
					set(
						$current,
						"attribute",
						lv_attribute_2_0,
						"fr.obeo.dsl.designer.sample.flow.routerdsl.RouterDsl.ProcessorAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSensorAccess
entryRuleSensorAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorAccessRule()); }
	iv_ruleSensorAccess=ruleSensorAccess
	{ $current=$iv_ruleSensorAccess.current; }
	EOF;

// Rule SensorAccess
ruleSensorAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorAccessRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSensorAccessAccess().getSensorDataSourceCrossReference_0_0());
				}
			)
		)
		otherlv_1='.volume'
		{
			newLeafNode(otherlv_1, grammarAccess.getSensorAccessAccess().getVolumeKeyword_1());
		}
	)
;

// Entry rule entryRuleSystemAccess
entryRuleSystemAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemAccessRule()); }
	iv_ruleSystemAccess=ruleSystemAccess
	{ $current=$iv_ruleSystemAccess.current; }
	EOF;

// Rule SystemAccess
ruleSystemAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemAccessRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSystemAccessAccess().getSystemSystemCrossReference_0_0());
				}
			)
		)
		otherlv_1='.temperature'
		{
			newLeafNode(otherlv_1, grammarAccess.getSystemAccessAccess().getTemperatureKeyword_1());
		}
	)
;

// Rule ProcessorAttribute
ruleProcessorAttribute returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='capacity'
			{
				$current = grammarAccess.getProcessorAttributeAccess().getCapacityEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getProcessorAttributeAccess().getCapacityEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='load'
			{
				$current = grammarAccess.getProcessorAttributeAccess().getLoadEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getProcessorAttributeAccess().getLoadEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='consumption'
			{
				$current = grammarAccess.getProcessorAttributeAccess().getConsumptionEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getProcessorAttributeAccess().getConsumptionEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule Comparison
ruleComparison returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='<'
			{
				$current = grammarAccess.getComparisonAccess().getLOWEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getComparisonAccess().getLOWEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<='
			{
				$current = grammarAccess.getComparisonAccess().getLOWER_EQEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getComparisonAccess().getLOWER_EQEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='='
			{
				$current = grammarAccess.getComparisonAccess().getEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getComparisonAccess().getEQEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='>'
			{
				$current = grammarAccess.getComparisonAccess().getHIGHEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getComparisonAccess().getHIGHEREnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='>='
			{
				$current = grammarAccess.getComparisonAccess().getHIGHER_EQEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getComparisonAccess().getHIGHER_EQEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule TimeUnit
ruleTimeUnit returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='sec'
			{
				$current = grammarAccess.getTimeUnitAccess().getSecondsEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTimeUnitAccess().getSecondsEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='msec'
			{
				$current = grammarAccess.getTimeUnitAccess().getMillisecondsEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTimeUnitAccess().getMillisecondsEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='usec'
			{
				$current = grammarAccess.getTimeUnitAccess().getMicrosecondsEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTimeUnitAccess().getMicrosecondsEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule TemperatureUnit
ruleTemperatureUnit returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='\u00B0C'
			{
				$current = grammarAccess.getTemperatureUnitAccess().getCelsiusEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTemperatureUnitAccess().getCelsiusEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='\u00B0F'
			{
				$current = grammarAccess.getTemperatureUnitAccess().getFahrenheitEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTemperatureUnitAccess().getFahrenheitEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule AlertLevel
ruleAlertLevel returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='critical'
			{
				$current = grammarAccess.getAlertLevelAccess().getCriticalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAlertLevelAccess().getCriticalEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='major'
			{
				$current = grammarAccess.getAlertLevelAccess().getMajorEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAlertLevelAccess().getMajorEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='error'
			{
				$current = grammarAccess.getAlertLevelAccess().getErrorEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAlertLevelAccess().getErrorEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='warning'
			{
				$current = grammarAccess.getAlertLevelAccess().getWarningEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getAlertLevelAccess().getWarningEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
