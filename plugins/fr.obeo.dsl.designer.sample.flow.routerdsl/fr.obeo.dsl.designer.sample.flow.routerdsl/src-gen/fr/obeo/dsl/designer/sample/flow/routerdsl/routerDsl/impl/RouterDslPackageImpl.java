/**
 * generated by Xtext 2.12.0
 */
package fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.impl;

import fr.obeo.dsl.designer.sample.flow.FlowPackage;

import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.Alert;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.AlertLevel;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.CaseRule;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.Comparison;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.Conditional;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.Decision;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.DropMessage;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.LiteralValue;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.MessageDecision;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.ObjectAccess;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.ObjectAccessOrValue;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.ProcessorAccess;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.ProcessorAttribute;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.RouteTo;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.RouterDslFactory;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.RouterDslPackage;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.RoutingRule;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.RoutingRules;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.SensorAccess;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.SensorAttribute;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.SystemAccess;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.Temperature;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.TemperatureUnit;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.Throughtput;
import fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.TimeUnit;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class RouterDslPackageImpl extends EPackageImpl implements RouterDslPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass routingRulesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass caseRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass decisionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass messageDecisionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass routeToEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dropMessageEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass alertEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditionalEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass objectAccessOrValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass literalValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass throughtputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass temperatureEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass objectAccessEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass processorAccessEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sensorAccessEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass systemAccessEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass routingRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum sensorAttributeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum processorAttributeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum comparisonEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum timeUnitEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum temperatureUnitEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum alertLevelEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see fr.obeo.dsl.designer.sample.flow.routerdsl.routerDsl.RouterDslPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private RouterDslPackageImpl()
  {
    super(eNS_URI, RouterDslFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link RouterDslPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static RouterDslPackage init()
  {
    if (isInited) return (RouterDslPackage)EPackage.Registry.INSTANCE.getEPackage(RouterDslPackage.eNS_URI);

    // Obtain or create and register package
    RouterDslPackageImpl theRouterDslPackage = (RouterDslPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof RouterDslPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new RouterDslPackageImpl());

    isInited = true;

    // Initialize simple dependencies
    FlowPackage.eINSTANCE.eClass();

    // Create package meta-data objects
    theRouterDslPackage.createPackageContents();

    // Initialize created meta-data
    theRouterDslPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theRouterDslPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(RouterDslPackage.eNS_URI, theRouterDslPackage);
    return theRouterDslPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRoutingRules()
  {
    return routingRulesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCaseRule()
  {
    return caseRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCaseRule_Condition()
  {
    return (EReference)caseRuleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCaseRule_Decisions()
  {
    return (EReference)caseRuleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDecision()
  {
    return decisionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMessageDecision()
  {
    return messageDecisionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRouteTo()
  {
    return routeToEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getRouteTo_Destination()
  {
    return (EReference)routeToEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDropMessage()
  {
    return dropMessageEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAlert()
  {
    return alertEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAlert_Level()
  {
    return (EAttribute)alertEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getConditional()
  {
    return conditionalEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getConditional_Left()
  {
    return (EReference)conditionalEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getConditional_Op()
  {
    return (EAttribute)conditionalEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getConditional_Right()
  {
    return (EReference)conditionalEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getObjectAccessOrValue()
  {
    return objectAccessOrValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLiteralValue()
  {
    return literalValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLiteralValue_Value()
  {
    return (EAttribute)literalValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getThroughtput()
  {
    return throughtputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getThroughtput_Value()
  {
    return (EAttribute)throughtputEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getThroughtput_Unit()
  {
    return (EAttribute)throughtputEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTemperature()
  {
    return temperatureEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTemperature_Value()
  {
    return (EAttribute)temperatureEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTemperature_Unit()
  {
    return (EAttribute)temperatureEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getObjectAccess()
  {
    return objectAccessEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getProcessorAccess()
  {
    return processorAccessEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getProcessorAccess_Processor()
  {
    return (EReference)processorAccessEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getProcessorAccess_Attribute()
  {
    return (EAttribute)processorAccessEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSensorAccess()
  {
    return sensorAccessEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSensorAccess_Sensor()
  {
    return (EReference)sensorAccessEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSystemAccess()
  {
    return systemAccessEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSystemAccess_System()
  {
    return (EReference)systemAccessEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRoutingRule()
  {
    return routingRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getRoutingRule_Rules()
  {
    return (EReference)routingRuleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getSensorAttribute()
  {
    return sensorAttributeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getProcessorAttribute()
  {
    return processorAttributeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getComparison()
  {
    return comparisonEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getTimeUnit()
  {
    return timeUnitEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getTemperatureUnit()
  {
    return temperatureUnitEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getAlertLevel()
  {
    return alertLevelEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RouterDslFactory getRouterDslFactory()
  {
    return (RouterDslFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    routingRulesEClass = createEClass(ROUTING_RULES);

    caseRuleEClass = createEClass(CASE_RULE);
    createEReference(caseRuleEClass, CASE_RULE__CONDITION);
    createEReference(caseRuleEClass, CASE_RULE__DECISIONS);

    decisionEClass = createEClass(DECISION);

    messageDecisionEClass = createEClass(MESSAGE_DECISION);

    routeToEClass = createEClass(ROUTE_TO);
    createEReference(routeToEClass, ROUTE_TO__DESTINATION);

    dropMessageEClass = createEClass(DROP_MESSAGE);

    alertEClass = createEClass(ALERT);
    createEAttribute(alertEClass, ALERT__LEVEL);

    conditionalEClass = createEClass(CONDITIONAL);
    createEReference(conditionalEClass, CONDITIONAL__LEFT);
    createEAttribute(conditionalEClass, CONDITIONAL__OP);
    createEReference(conditionalEClass, CONDITIONAL__RIGHT);

    objectAccessOrValueEClass = createEClass(OBJECT_ACCESS_OR_VALUE);

    literalValueEClass = createEClass(LITERAL_VALUE);
    createEAttribute(literalValueEClass, LITERAL_VALUE__VALUE);

    throughtputEClass = createEClass(THROUGHTPUT);
    createEAttribute(throughtputEClass, THROUGHTPUT__VALUE);
    createEAttribute(throughtputEClass, THROUGHTPUT__UNIT);

    temperatureEClass = createEClass(TEMPERATURE);
    createEAttribute(temperatureEClass, TEMPERATURE__VALUE);
    createEAttribute(temperatureEClass, TEMPERATURE__UNIT);

    objectAccessEClass = createEClass(OBJECT_ACCESS);

    processorAccessEClass = createEClass(PROCESSOR_ACCESS);
    createEReference(processorAccessEClass, PROCESSOR_ACCESS__PROCESSOR);
    createEAttribute(processorAccessEClass, PROCESSOR_ACCESS__ATTRIBUTE);

    sensorAccessEClass = createEClass(SENSOR_ACCESS);
    createEReference(sensorAccessEClass, SENSOR_ACCESS__SENSOR);

    systemAccessEClass = createEClass(SYSTEM_ACCESS);
    createEReference(systemAccessEClass, SYSTEM_ACCESS__SYSTEM);

    routingRuleEClass = createEClass(ROUTING_RULE);
    createEReference(routingRuleEClass, ROUTING_RULE__RULES);

    // Create enums
    sensorAttributeEEnum = createEEnum(SENSOR_ATTRIBUTE);
    processorAttributeEEnum = createEEnum(PROCESSOR_ATTRIBUTE);
    comparisonEEnum = createEEnum(COMPARISON);
    timeUnitEEnum = createEEnum(TIME_UNIT);
    temperatureUnitEEnum = createEEnum(TEMPERATURE_UNIT);
    alertLevelEEnum = createEEnum(ALERT_LEVEL);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Obtain other dependent packages
    FlowPackage theFlowPackage = (FlowPackage)EPackage.Registry.INSTANCE.getEPackage(FlowPackage.eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    messageDecisionEClass.getESuperTypes().add(this.getDecision());
    routeToEClass.getESuperTypes().add(this.getDecision());
    dropMessageEClass.getESuperTypes().add(this.getMessageDecision());
    alertEClass.getESuperTypes().add(this.getMessageDecision());
    literalValueEClass.getESuperTypes().add(this.getObjectAccessOrValue());
    throughtputEClass.getESuperTypes().add(this.getObjectAccessOrValue());
    temperatureEClass.getESuperTypes().add(this.getObjectAccessOrValue());
    objectAccessEClass.getESuperTypes().add(this.getObjectAccessOrValue());
    processorAccessEClass.getESuperTypes().add(this.getObjectAccess());
    sensorAccessEClass.getESuperTypes().add(this.getObjectAccess());
    systemAccessEClass.getESuperTypes().add(this.getObjectAccess());
    routingRuleEClass.getESuperTypes().add(this.getRoutingRules());

    // Initialize classes and features; add operations and parameters
    initEClass(routingRulesEClass, RoutingRules.class, "RoutingRules", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(caseRuleEClass, CaseRule.class, "CaseRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCaseRule_Condition(), this.getConditional(), null, "condition", null, 0, 1, CaseRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCaseRule_Decisions(), this.getDecision(), null, "decisions", null, 0, -1, CaseRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(decisionEClass, Decision.class, "Decision", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(messageDecisionEClass, MessageDecision.class, "MessageDecision", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(routeToEClass, RouteTo.class, "RouteTo", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRouteTo_Destination(), theFlowPackage.getProcessor(), null, "destination", null, 0, 1, RouteTo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dropMessageEClass, DropMessage.class, "DropMessage", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(alertEClass, Alert.class, "Alert", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAlert_Level(), this.getAlertLevel(), "level", null, 0, 1, Alert.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conditionalEClass, Conditional.class, "Conditional", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConditional_Left(), this.getObjectAccessOrValue(), null, "left", null, 0, 1, Conditional.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConditional_Op(), this.getComparison(), "op", null, 0, 1, Conditional.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConditional_Right(), this.getObjectAccessOrValue(), null, "right", null, 0, 1, Conditional.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(objectAccessOrValueEClass, ObjectAccessOrValue.class, "ObjectAccessOrValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(literalValueEClass, LiteralValue.class, "LiteralValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLiteralValue_Value(), ecorePackage.getEInt(), "value", null, 0, 1, LiteralValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(throughtputEClass, Throughtput.class, "Throughtput", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getThroughtput_Value(), ecorePackage.getEInt(), "value", null, 0, 1, Throughtput.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getThroughtput_Unit(), this.getTimeUnit(), "unit", null, 0, 1, Throughtput.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(temperatureEClass, Temperature.class, "Temperature", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTemperature_Value(), ecorePackage.getEInt(), "value", null, 0, 1, Temperature.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTemperature_Unit(), this.getTemperatureUnit(), "unit", null, 0, 1, Temperature.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(objectAccessEClass, ObjectAccess.class, "ObjectAccess", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(processorAccessEClass, ProcessorAccess.class, "ProcessorAccess", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getProcessorAccess_Processor(), theFlowPackage.getProcessor(), null, "processor", null, 0, 1, ProcessorAccess.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getProcessorAccess_Attribute(), this.getProcessorAttribute(), "attribute", null, 0, 1, ProcessorAccess.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sensorAccessEClass, SensorAccess.class, "SensorAccess", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSensorAccess_Sensor(), theFlowPackage.getDataSource(), null, "sensor", null, 0, 1, SensorAccess.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(systemAccessEClass, SystemAccess.class, "SystemAccess", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSystemAccess_System(), theFlowPackage.getSystem(), null, "system", null, 0, 1, SystemAccess.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(routingRuleEClass, RoutingRule.class, "RoutingRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRoutingRule_Rules(), this.getCaseRule(), null, "rules", null, 0, -1, RoutingRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(sensorAttributeEEnum, SensorAttribute.class, "SensorAttribute");
    addEEnumLiteral(sensorAttributeEEnum, SensorAttribute.VOLUME);

    initEEnum(processorAttributeEEnum, ProcessorAttribute.class, "ProcessorAttribute");
    addEEnumLiteral(processorAttributeEEnum, ProcessorAttribute.CAPACITY);
    addEEnumLiteral(processorAttributeEEnum, ProcessorAttribute.LOAD);
    addEEnumLiteral(processorAttributeEEnum, ProcessorAttribute.CONSUMPTION);

    initEEnum(comparisonEEnum, Comparison.class, "Comparison");
    addEEnumLiteral(comparisonEEnum, Comparison.LOWER);
    addEEnumLiteral(comparisonEEnum, Comparison.LOWER_EQ);
    addEEnumLiteral(comparisonEEnum, Comparison.EQ);
    addEEnumLiteral(comparisonEEnum, Comparison.HIGHER);
    addEEnumLiteral(comparisonEEnum, Comparison.HIGHER_EQ);

    initEEnum(timeUnitEEnum, TimeUnit.class, "TimeUnit");
    addEEnumLiteral(timeUnitEEnum, TimeUnit.SECONDS);
    addEEnumLiteral(timeUnitEEnum, TimeUnit.MILLISECONDS);
    addEEnumLiteral(timeUnitEEnum, TimeUnit.MICROSECONDS);

    initEEnum(temperatureUnitEEnum, TemperatureUnit.class, "TemperatureUnit");
    addEEnumLiteral(temperatureUnitEEnum, TemperatureUnit.CELSIUS);
    addEEnumLiteral(temperatureUnitEEnum, TemperatureUnit.FAHRENHEIT);

    initEEnum(alertLevelEEnum, AlertLevel.class, "AlertLevel");
    addEEnumLiteral(alertLevelEEnum, AlertLevel.CRITICAL);
    addEEnumLiteral(alertLevelEEnum, AlertLevel.MAJOR);
    addEEnumLiteral(alertLevelEEnum, AlertLevel.ERROR);
    addEEnumLiteral(alertLevelEEnum, AlertLevel.WARNING);

    // Create resource
    createResource(eNS_URI);
  }

} //RouterDslPackageImpl
